[{"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\index.js":"1","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\store\\UserStore.js":"2","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\App.js":"3","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\store\\DeviceStore.js":"4","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\http\\userAPI.js":"5","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\AppRouter.js":"6","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\NavBar.js":"7","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\http\\index.js":"8","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\routes.js":"9","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\utils\\consts.js":"10","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Basket.js":"11","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Admin.js":"12","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Shop.js":"13","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Auth.js":"14","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\DevicePage.js":"15","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\TypeBar.js":"16","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\Pages.js":"17","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\http\\deviceAPI.js":"18","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\modals\\CreateType.js":"19","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\modals\\CreateDevice.js":"20","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\DeviceItem.js":"21","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\modals\\ImageMore.js":"22"},{"size":439,"mtime":1611935406000,"results":"23","hashOfConfig":"24"},{"size":401,"mtime":1611935406000,"results":"25","hashOfConfig":"24"},{"size":881,"mtime":1619783784083,"results":"26","hashOfConfig":"24"},{"size":968,"mtime":1619959326170,"results":"27","hashOfConfig":"24"},{"size":695,"mtime":1611935406000,"results":"28","hashOfConfig":"24"},{"size":795,"mtime":1611935406000,"results":"29","hashOfConfig":"24"},{"size":1638,"mtime":1619945550402,"results":"30","hashOfConfig":"24"},{"size":407,"mtime":1611935406000,"results":"31","hashOfConfig":"24"},{"size":932,"mtime":1619868905869,"results":"32","hashOfConfig":"24"},{"size":264,"mtime":1619868622370,"results":"33","hashOfConfig":"24"},{"size":146,"mtime":1611935406000,"results":"34","hashOfConfig":"24"},{"size":3134,"mtime":1619959290969,"results":"35","hashOfConfig":"24"},{"size":1424,"mtime":1619962076588,"results":"36","hashOfConfig":"24"},{"size":3142,"mtime":1611935406000,"results":"37","hashOfConfig":"24"},{"size":882,"mtime":1619868559153,"results":"38","hashOfConfig":"24"},{"size":718,"mtime":1619872732547,"results":"39","hashOfConfig":"24"},{"size":801,"mtime":1611935406000,"results":"40","hashOfConfig":"24"},{"size":765,"mtime":1619959229249,"results":"41","hashOfConfig":"24"},{"size":1293,"mtime":1619872479224,"results":"42","hashOfConfig":"24"},{"size":4506,"mtime":1619959250232,"results":"43","hashOfConfig":"24"},{"size":770,"mtime":1619869342113,"results":"44","hashOfConfig":"24"},{"size":3176,"mtime":1619873125758,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1f9gnd8",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\index.js",[],["103","104"],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\store\\UserStore.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\App.js",["105"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\nimport './index.css'\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\store\\DeviceStore.js",[],["106","107"],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\http\\userAPI.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\AppRouter.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\NavBar.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\http\\index.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\routes.js",["108","109"],"import Admin from \"./pages/Admin\";\nimport {ADMIN_ROUTE, IMAGE_ROUTE, BASKET_ROUTE, DEVICE_ROUTE, LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"./utils/consts\";\nimport Basket from \"./pages/Basket\";\nimport Shop from \"./pages/Shop\";\nimport Auth from \"./pages/Auth\";\nimport DevicePage from \"./pages/DevicePage\";\nimport ImageMore from \"./components/modals/ImageMore\";\n\nexport const authRoutes = [\n    {\n        path: ADMIN_ROUTE,\n        Component: Admin\n    },\n    {\n        path: BASKET_ROUTE,\n        Component: Basket\n    },\n]\n\nexport const publicRoutes = [\n    {\n        path: SHOP_ROUTE,\n        Component: Shop\n    },\n    {\n        path: IMAGE_ROUTE + '/:id',\n        Component: ImageMore\n    },\n    {\n        path: LOGIN_ROUTE,\n        Component: Auth\n    },\n    {\n        path: REGISTRATION_ROUTE,\n        Component: Auth\n    },\n    // {\n    //     path: DEVICE_ROUTE + '/:id',\n    //     Component: DevicePage\n    // },\n]\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\utils\\consts.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Basket.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Admin.js",["110","111","112","113","114","115","116"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport CreateDevice from \"../components/modals/CreateDevice\";\nimport CreateType from \"../components/modals/CreateType\";\nimport { Context } from \"../index\";\nimport { observer } from \"mobx-react-lite\";\nimport { Pie } from \"react-chartjs-2\";\nimport { $host } from \"../http/index\";\n\nconst Admin = observer(() => {\n  const { device } = useContext(Context);\n\n  const [typeVisible, setTypeVisible] = useState(false);\n  const [deviceVisible, setDeviceVisible] = useState(false);\n\n  const [deviceCats, setDeviceCats] = useState([]);\n  const [devicePrices, setDevicePrices] = useState([]);\n  const [images, setImages] = useState([]);\n  const [imageCatCount, setImageCatCount] = useState({});\n  const [categories, setCategories] = useState([]);\n\n  useEffect(async () => {\n    const { data } = await $host.get(\"api/type\");\n    setCategories(data);\n  }, []);\n\n  useEffect(async () => {\n    let tempDeviceCats = [];\n    let tempDevicePrices = [];\n    let tempImageCatCount = [];\n    for (let i = 0; i < categories.length; i++) {\n      tempDeviceCats.push(categories[i].name);\n      let tempCatId = categories[i].id;\n      const { data } = await $host.get(\"api/device\", {\n        params: {\n          typeId: tempCatId,\n          page: 1,\n          limit: 99,\n        },\n      });\n      tempImageCatCount.push(data.rows.length);\n    }\n    setImageCatCount(tempImageCatCount);\n    setDeviceCats(tempDeviceCats);\n    setDevicePrices(tempDevicePrices);\n  }, [categories]);\n\n  useEffect(async () => {\n    console.log(imageCatCount);\n    console.log(categories);\n  }, [imageCatCount, categories]);\n\n  return (\n    <Container className=\"d-flex flex-column\">\n      <div className=\"d-flex flex-row-reverse\">\n        <Button\n          variant={\"light\"}\n          className=\"mt-4 mx-3 p-2\"\n          onClick={() => setTypeVisible(true)}\n        >\n          Add Category\n        </Button>\n\n        <Button\n          variant={\"light\"}\n          className=\"mt-4 mx-3 p-2\"\n          onClick={() => setDeviceVisible(true)}\n        >\n          Deploy Image\n        </Button>\n      </div>\n\n      <CreateDevice\n        show={deviceVisible}\n        onHide={() => setDeviceVisible(false)}\n      />\n      <CreateType show={typeVisible} onHide={() => setTypeVisible(false)} />\n      <div className=\" my-3 py-3 lightBg\">\n        <Pie\n          data={{\n            labels: deviceCats,\n            datasets: [\n              {\n                label: \"Images per year\",\n                backgroundColor: [\n                  \"#B21F00\",\n                  \"#C9DE00\",\n                  \"#2FDE00\",\n                  \"#00A6B4\",\n                  \"#6800B4\",\n                ],\n                hoverBackgroundColor: [\n                  \"#501800\",\n                  \"#4B5000\",\n                  \"#175000\",\n                  \"#003350\",\n                  \"#35014F\",\n                ],\n                borderWidth: 0,\n                data: imageCatCount,\n              },\n            ],\n          }}\n        />\n      </div>\n    </Container>\n  );\n});\n\nexport default Admin;\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Shop.js",["117","118","119"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Row, Col } from \"react-bootstrap\";\nimport TypeBar from \"../components/TypeBar\";\nimport DeviceItem from \"../components/DeviceItem\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchDevices, fetchTypes } from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n  const { device } = useContext(Context);\n\n  useEffect(() => {\n    fetchTypes().then((data) => device.setTypes(data));\n    fetchDevices(null, null, 1, 10).then((data) => {\n      device.setDevices(data.rows);\n      device.setTotalCount(data.count);\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchDevices(device.selectedType.id, device.page, 10).then((data) => {\n      device.setDevices(data.rows);\n      device.setTotalCount(data.count);\n    });\n  }, [device.page, device.selectedType]);\n\n  return (\n    <Container>\n      <Row>\n        <h1 style={{textAlign: \"center\", color: \"white\", margin: \"auto\"}}>Find high quality stock images</h1>\n      </Row>\n      <Row>\n        <TypeBar />\n      </Row>\n\n      <Row>\n        {device.devices.map((device) => (\n          <Col key={device.id} sm={12} md={6} lg={4} xl={3}>\n            <DeviceItem device={device} />\n          </Col>\n        ))}\n      </Row>\n      <Pages />\n    </Container>\n  );\n});\n\nexport default Shop;\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Auth.js",["120"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\DevicePage.js",["121","122"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Col,\n  Container,\n  Image,\n  Row,\n} from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchOneDevice } from \"../http/deviceAPI\";\n\nconst DevicePage = () => {\n  const [device, setDevice] = useState({ info: [] });\n  const { id } = useParams();\n  useEffect(() => {\n    fetchOneDevice(id).then((data) => setDevice(data));\n  }, []);\n\n  return (\n    <Container className=\"mt-3\">\n      <Row>\n        <Col>\n          <Image\n            width={300}\n            height={300}\n            src={process.env.REACT_APP_API_URL + device.img}\n          />\n        </Col>\n        <Col>\n          <a className=\"btn btn-info\" href={process.env.REACT_APP_API_URL + device.img} target=\"_blank\" download>Click to open in new tab</a>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default DevicePage;\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\TypeBar.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\Pages.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\http\\deviceAPI.js",["123"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, page, limit= 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    console.log(data);\n    return data\n}\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\modals\\CreateType.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\modals\\CreateDevice.js",["124","125","126"],"import React, { useContext, useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button, Dropdown, Form, Row, Col } from \"react-bootstrap\";\nimport { Context } from \"../../index\";\nimport {\n  createDevice,\n  fetchDevices,\n  fetchTypes,\n} from \"../../http/deviceAPI\";\nimport { observer } from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({ show, onHide }) => {\n  const { device } = useContext(Context);\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(null);\n  const [file, setFile] = useState(null);\n  const [info, setInfo] = useState([\n    {\n      title: \"Nice\",\n      description: \"Image\",\n    },\n  ]);\n\n  useEffect(() => {\n    fetchTypes().then((data) => device.setTypes(data));\n  }, []);\n\n  const selectFile = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const addDevice = () => {\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"price\", `${price}`);\n    formData.append(\"img\", file);\n    formData.append(\"typeId\", device.selectedType.id);\n    formData.append(\"info\", JSON.stringify(info));\n    createDevice(formData).then((data) => onHide());\n  };\n\n  return (\n    <Modal show={show} onHide={onHide} centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Deploy Image\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            className=\"mt-3\"\n            placeholder=\"Enter name of Photographer\"\n          />\n          <Form.Control\n            value={price}\n            onChange={(e) => setPrice(Number(e.target.value))}\n            className=\"mt-3\"\n            placeholder=\"Enter the year of shot\"\n            type=\"number\"\n          />\n          <Row>\n            <Col>\n              <Dropdown id=\"dropDown\" className=\"mt-2 mb-2\">\n                <Dropdown.Toggle>\n                  {device.selectedType.name || \"Select the category\"}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {device.types.map((type) => (\n                    <Dropdown.Item\n                      onClick={() => device.setSelectedType(type)}\n                      key={type.id}\n                    >\n                      {type.name}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n          <Form.Control className=\"mt-3\" type=\"file\" onChange={selectFile} />\n          <hr />\n          {/* <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )} */}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"danger\" onClick={onHide}>\n          Close\n        </Button>\n        <Button variant=\"success\" onClick={addDevice}>\n          Save\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n});\n\nexport default CreateDevice;\n",["127","128"],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\DeviceItem.js",["129","130","131"],"import React, { useState } from \"react\";\nimport { Card, Col } from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport { useHistory } from \"react-router-dom\";\nimport { DEVICE_ROUTE } from \"../utils/consts\";\nimport ImageMore from \"../components/modals/ImageMore\";\n\nconst DeviceItem = ({ device }) => {\n  const history = useHistory();\n  const [moreVisible, setMoreVisible] = useState(false);\n\n  return (\n    <>\n      <Card\n        className=\"my-3 p-3 rounded\"\n        onClick={() => setMoreVisible(true)}\n        border={\"light\"}\n      >\n        <Image src={process.env.REACT_APP_API_URL + device.img} />\n      </Card>\n      <ImageMore show={moreVisible} onHide={() => setMoreVisible(false)} device={device} />\n    </>\n  );\n};\n\nexport default DeviceItem;\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\modals\\ImageMore.js",["132"],"import React, { useState, useRef } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Col, Container, Image, Row } from \"react-bootstrap\";\r\n\r\nconst ImageMore = ({ show, onHide, device }) => {\r\n  const [copySuccess, setCopySuccess] = useState(\"\");\r\n  const textAreaRef = useRef(null);\r\n\r\n  function copyToClipboard(e) {\r\n    textAreaRef.current.select();\r\n    document.execCommand(\"copy\");\r\n    e.target.focus();\r\n    setCopySuccess(\"Copied!\");\r\n    setTimeout(function () {\r\n      setCopySuccess(\"\");\r\n    }, 3000);\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} centered>\r\n      <Modal.Body>\r\n        <Container className=\"mt-3\">\r\n          <Row style={{ borderBottom: \"1px solid gray\" }} className=\"pb-3\">\r\n            <Col>\r\n              <Image\r\n                width={300}\r\n                src={process.env.REACT_APP_API_URL + device.img}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ borderBottom: \"1px solid gray\" }} className=\"mb-1\">\r\n            <Col>\r\n              <label htmlFor=\"photgraher\">Photographer</label>\r\n            </Col>\r\n            <Col>\r\n              <input\r\n                type=\"text\"\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n                value={device.name}\r\n                readOnly\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ borderBottom: \"1px solid gray\" }} className=\"mb-3\">\r\n            <Col>\r\n              <label htmlFor=\"photgraher\">Year of shot</label>\r\n            </Col>\r\n            <Col>\r\n              <input\r\n                type=\"text\"\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n                value={device.price}\r\n                readOnly\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <a\r\n                className=\"btn btn-info\"\r\n                href={process.env.REACT_APP_API_URL + device.img}\r\n                target=\"_blank\"\r\n                download\r\n              >\r\n                Click to open in new tab\r\n              </a>\r\n            </Col>\r\n            <Col>\r\n              <label htmlFor=\"link\">Copy link</label>\r\n              <input\r\n                id=\"link\"\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n                ref={textAreaRef}\r\n                readOnly\r\n                value={process.env.REACT_APP_API_URL + device.img}\r\n              />\r\n              {document.queryCommandSupported(\"copy\") ? (\r\n                <div>\r\n                  <i\r\n                    onClick={copyToClipboard}\r\n                    className=\"fas fa-copy fa-2x my-2\"\r\n                  ></i>\r\n                  {copySuccess}\r\n                </div>\r\n              ) : (\r\n                <input value={process.env.REACT_APP_API_URL + device.img} />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"outline-danger\" onClick={onHide}>\r\n          Закрыть\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ImageMore;\r\n",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":20,"column":8,"nodeType":"139","endLine":20,"endColumn":10,"suggestions":"140"},{"ruleId":"133","replacedBy":"141"},{"ruleId":"135","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":2,"column":49,"nodeType":"145","messageId":"146","endLine":2,"endColumn":61},{"ruleId":"143","severity":1,"message":"147","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":18},{"ruleId":"143","severity":1,"message":"148","line":11,"column":11,"nodeType":"145","messageId":"146","endLine":11,"endColumn":17},{"ruleId":"143","severity":1,"message":"149","line":17,"column":10,"nodeType":"145","messageId":"146","endLine":17,"endColumn":22},{"ruleId":"143","severity":1,"message":"150","line":18,"column":10,"nodeType":"145","messageId":"146","endLine":18,"endColumn":16},{"ruleId":"143","severity":1,"message":"151","line":18,"column":18,"nodeType":"145","messageId":"146","endLine":18,"endColumn":27},{"ruleId":"137","severity":1,"message":"152","line":22,"column":13,"nodeType":"153","endLine":25,"endColumn":4},{"ruleId":"137","severity":1,"message":"152","line":27,"column":13,"nodeType":"153","endLine":46,"endColumn":4},{"ruleId":"137","severity":1,"message":"152","line":48,"column":13,"nodeType":"153","endLine":51,"endColumn":4},{"ruleId":"143","severity":1,"message":"154","line":1,"column":29,"nodeType":"145","messageId":"146","endLine":1,"endColumn":37},{"ruleId":"137","severity":1,"message":"155","line":20,"column":6,"nodeType":"139","endLine":20,"endColumn":8,"suggestions":"156"},{"ruleId":"137","severity":1,"message":"155","line":27,"column":6,"nodeType":"139","endLine":27,"endColumn":40,"suggestions":"157"},{"ruleId":"143","severity":1,"message":"158","line":26,"column":17,"nodeType":"145","messageId":"146","endLine":26,"endColumn":21},{"ruleId":"137","severity":1,"message":"159","line":16,"column":6,"nodeType":"139","endLine":16,"endColumn":8,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":29,"column":11,"nodeType":"163","endLine":29,"endColumn":114},{"ruleId":"143","severity":1,"message":"164","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":18},{"ruleId":"143","severity":1,"message":"165","line":7,"column":3,"nodeType":"145","messageId":"146","endLine":7,"endColumn":15},{"ruleId":"143","severity":1,"message":"166","line":17,"column":16,"nodeType":"145","messageId":"146","endLine":17,"endColumn":23},{"ruleId":"137","severity":1,"message":"155","line":26,"column":6,"nodeType":"139","endLine":26,"endColumn":8,"suggestions":"167"},{"ruleId":"133","replacedBy":"168"},{"ruleId":"135","replacedBy":"169"},{"ruleId":"143","severity":1,"message":"170","line":2,"column":16,"nodeType":"145","messageId":"146","endLine":2,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":22},{"ruleId":"143","severity":1,"message":"171","line":9,"column":9,"nodeType":"145","messageId":"146","endLine":9,"endColumn":16},{"ruleId":"161","severity":1,"message":"162","line":60,"column":15,"nodeType":"163","endLine":65,"endColumn":16},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["174"],["172"],["173"],"no-unused-vars","'DEVICE_ROUTE' is defined but never used.","Identifier","unusedVar","'DevicePage' is defined but never used.","'device' is assigned a value but never used.","'devicePrices' is assigned a value but never used.","'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["175"],["176"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["177"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'jwt_decode' is defined but never used.","'fetchDevices' is defined but never used.","'setInfo' is assigned a value but never used.",["178"],["172"],["173"],"'Col' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"181","fix":"187"},"Update the dependencies array to be: [user]",{"range":"188","text":"189"},"Update the dependencies array to be: [device]",{"range":"190","text":"191"},"Update the dependencies array to be: [device, device.page, device.selectedType]",{"range":"192","text":"193"},"Update the dependencies array to be: [id]",{"range":"194","text":"195"},{"range":"196","text":"191"},[662,664],"[user]",[724,726],"[device]",[914,948],"[device, device.page, device.selectedType]",[414,416],"[id]",[754,756]]