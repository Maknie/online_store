[{"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\index.js":"1","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\store\\UserStore.js":"2","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\App.js":"3","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\store\\DeviceStore.js":"4","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\http\\userAPI.js":"5","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\AppRouter.js":"6","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\NavBar.js":"7","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\http\\index.js":"8","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\routes.js":"9","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\utils\\consts.js":"10","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Basket.js":"11","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Admin.js":"12","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Shop.js":"13","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Auth.js":"14","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\DevicePage.js":"15","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\DeviceList.js":"16","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\BrandBar.js":"17","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\TypeBar.js":"18","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\Pages.js":"19","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\http\\deviceAPI.js":"20","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\modals\\CreateType.js":"21","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\modals\\CreateBrand.js":"22","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\modals\\CreateDevice.js":"23","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\DeviceItem.js":"24"},{"size":439,"mtime":1611935406000,"results":"25","hashOfConfig":"26"},{"size":401,"mtime":1611935406000,"results":"27","hashOfConfig":"26"},{"size":881,"mtime":1619783784083,"results":"28","hashOfConfig":"26"},{"size":1299,"mtime":1619786250559,"results":"29","hashOfConfig":"26"},{"size":695,"mtime":1611935406000,"results":"30","hashOfConfig":"26"},{"size":795,"mtime":1611935406000,"results":"31","hashOfConfig":"26"},{"size":1847,"mtime":1619783763404,"results":"32","hashOfConfig":"26"},{"size":407,"mtime":1611935406000,"results":"33","hashOfConfig":"26"},{"size":774,"mtime":1611935406000,"results":"34","hashOfConfig":"26"},{"size":228,"mtime":1611935406000,"results":"35","hashOfConfig":"26"},{"size":146,"mtime":1611935406000,"results":"36","hashOfConfig":"26"},{"size":2933,"mtime":1619786843395,"results":"37","hashOfConfig":"26"},{"size":1538,"mtime":1611935406000,"results":"38","hashOfConfig":"26"},{"size":3142,"mtime":1611935406000,"results":"39","hashOfConfig":"26"},{"size":1906,"mtime":1619787522450,"results":"40","hashOfConfig":"26"},{"size":491,"mtime":1611935406000,"results":"41","hashOfConfig":"26"},{"size":759,"mtime":1611935406000,"results":"42","hashOfConfig":"26"},{"size":752,"mtime":1611935406000,"results":"43","hashOfConfig":"26"},{"size":801,"mtime":1611935406000,"results":"44","hashOfConfig":"26"},{"size":1018,"mtime":1619787190971,"results":"45","hashOfConfig":"26"},{"size":1355,"mtime":1611935406000,"results":"46","hashOfConfig":"26"},{"size":1372,"mtime":1611935406000,"results":"47","hashOfConfig":"26"},{"size":6114,"mtime":1619783977551,"results":"48","hashOfConfig":"26"},{"size":902,"mtime":1619783878418,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1f9gnd8",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"52"},"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\index.js",[],["110","111"],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\store\\UserStore.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\App.js",["112"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\nimport './index.css'\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\store\\DeviceStore.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\http\\userAPI.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\AppRouter.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\NavBar.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\http\\index.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\routes.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\utils\\consts.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Basket.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Admin.js",["113","114","115"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport CreateBrand from \"../components/modals/CreateBrand\";\nimport CreateDevice from \"../components/modals/CreateDevice\";\nimport CreateType from \"../components/modals/CreateType\";\nimport { Context } from \"../index\";\nimport { observer } from \"mobx-react-lite\";\nimport { Bar } from \"react-chartjs-2\";\nimport { $host } from \"../http/index\";\n\nconst Admin = observer(() => {\n  const { device } = useContext(Context);\n\n  const [brandVisible, setBrandVisible] = useState(false);\n  const [typeVisible, setTypeVisible] = useState(false);\n  const [deviceVisible, setDeviceVisible] = useState(false);\n\n  const [deviceNames, setDeviceNames] = useState([]);\n  const [devicePrices, setDevicePrices] = useState([]);\n  const [devices, setDevices] = useState([]);\n\n  useEffect(async () => {\n    const {data} = await $host.get('api/device', {params: {\n        typeId: null, brandId: null, page: 1, limit: 9999\n    }})\n    setDevices(data.rows)\n  }, []);\n\n  useEffect(async () => {\n    let tempDeviceNames = [];\n    let tempDevicePrices = [];\n    console.log(devices);\n    for (let i = 0; i < devices.length; i++) {\n      tempDeviceNames.push(devices[i].name);\n      tempDevicePrices.push(devices[i].price);\n    }\n    setDeviceNames(tempDeviceNames)\n    setDevicePrices(tempDevicePrices)\n  }, [devices]);\n\n\n  return (\n    <Container className=\"d-flex flex-column\">\n      <Button\n        variant={\"outline-dark\"}\n        className=\"mt-4 p-2\"\n        onClick={() => setTypeVisible(true)}\n      >\n        Добавить тип\n      </Button>\n      <Button\n        variant={\"outline-dark\"}\n        className=\"mt-4 p-2\"\n        onClick={() => setBrandVisible(true)}\n      >\n        Добавить бренд\n      </Button>\n      <Button\n        variant={\"outline-dark\"}\n        className=\"mt-4 p-2\"\n        onClick={() => setDeviceVisible(true)}\n      >\n        Добавить устройство\n      </Button>\n      <CreateBrand show={brandVisible} onHide={() => setBrandVisible(false)} />\n      <CreateDevice\n        show={deviceVisible}\n        onHide={() => setDeviceVisible(false)}\n      />\n      <CreateType show={typeVisible} onHide={() => setTypeVisible(false)} />\n      <Bar\n        data={{\n          labels: deviceNames,\n          datasets: [\n            {\n              label: \"Цены на продукты\",\n              backgroundColor: [\n                \"#B21F00\",\n                \"#C9DE00\",\n                \"#2FDE00\",\n                \"#00A6B4\",\n                \"#6800B4\",\n              ],\n              hoverBackgroundColor: [\n                \"#501800\",\n                \"#4B5000\",\n                \"#175000\",\n                \"#003350\",\n                \"#35014F\",\n              ],\n              data: devicePrices,\n            },\n          ],\n        }}\n\n      />\n    </Container>\n  );\n});\n\nexport default Admin;\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Shop.js",["116","117"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.page, device.selectedType, device.selectedBrand,])\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\Auth.js",["118"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\pages\\DevicePage.js",["119","120"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Table,\n  Button,\n  Card,\n  Col,\n  Container,\n  Image,\n  Row,\n} from \"react-bootstrap\";\nimport bigStar from \"../assets/bigStar.png\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchOneDevice } from \"../http/deviceAPI\";\n\nconst DevicePage = () => {\n  const [device, setDevice] = useState({ info: [] });\n  const { id } = useParams();\n  useEffect(() => {\n    fetchOneDevice(id).then((data) => setDevice(data));\n  }, []);\n\n  return (\n    <Container className=\"mt-3\">\n      <Row>\n        <Col md={4}>\n          <Image\n            width={300}\n            height={300}\n            src={process.env.REACT_APP_API_URL + device.img}\n          />\n        </Col>\n        <Col md={4}>\n          <Row className=\"d-flex flex-column align-items-center\">\n            <h2>{device.name}</h2>\n          </Row>\n        </Col>\n        <Col md={4}>\n          <Card\n            className=\"d-flex flex-column align-items-center justify-content-around\"\n            style={{\n              width: 300,\n              height: 300,\n              fontSize: 32,\n              border: \"5px solid lightgray\",\n            }}\n          >\n            <h3>Цена: {device.price} тг.</h3>\n            <Button variant={\"outline-dark\"}>Добавить в корзину</Button>\n          </Card>\n        </Col>\n      </Row>\n      \n      <h1>Характеристики</h1>\n      <Table striped bordered hover responsive className=\"table-sm\">\n        <thead>\n          <tr>\n            <th>Свойство</th>\n            <th>Описание</th>\n          </tr>\n        </thead>\n        <tbody>\n          {device.info.map((info, index) => (\n            <tr key={info}>\n              <td>{info.title}</td>\n              <td>{info.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nexport default DevicePage;\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\DeviceList.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\BrandBar.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\TypeBar.js",["121"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\Pages.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\http\\deviceAPI.js",["122"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    console.log(data);\n    return data\n}\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\modals\\CreateType.js",[],["123","124"],"D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\modals\\CreateBrand.js",["125"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\modals\\CreateDevice.js",["126","127"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(null)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","D:\\Trash\\WebsiteDevelopment\\freelance\\online shop\\client\\src\\components\\DeviceItem.js",["128"],"import React from 'react';\nimport {Card, Col} from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport star from '../assets/star.png'\nimport {useHistory} from \"react-router-dom\"\nimport {DEVICE_ROUTE} from \"../utils/consts\";\n\nconst DeviceItem = ({device}) => {\n    const history = useHistory()\n    return (\n        <Col md={3} className={\"mt-3\"} onClick={() => history.push(DEVICE_ROUTE + '/' + device.id)}>\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\n                <Image width={150} height={150} src={process.env.REACT_APP_API_URL + device.img}/>\n                <div className=\"text-black-50 mt-1 d-flex justify-content-between align-items-center\">\n                    <div>Samsung...</div>\n                    \n                </div>\n                <div>{device.name}</div>\n            </Card>\n        </Col>\n    );\n};\n\nexport default DeviceItem;\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":20,"column":8,"nodeType":"135","endLine":20,"endColumn":10,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":12,"column":11,"nodeType":"139","messageId":"140","endLine":12,"endColumn":17},{"ruleId":"133","severity":1,"message":"141","line":22,"column":13,"nodeType":"142","endLine":27,"endColumn":4},{"ruleId":"133","severity":1,"message":"141","line":29,"column":13,"nodeType":"142","endLine":39,"endColumn":4},{"ruleId":"133","severity":1,"message":"143","line":23,"column":8,"nodeType":"135","endLine":23,"endColumn":10,"suggestions":"144"},{"ruleId":"133","severity":1,"message":"143","line":30,"column":8,"nodeType":"135","endLine":30,"endColumn":65,"suggestions":"145"},{"ruleId":"137","severity":1,"message":"146","line":26,"column":17,"nodeType":"139","messageId":"140","endLine":26,"endColumn":21},{"ruleId":"137","severity":1,"message":"147","line":11,"column":8,"nodeType":"139","messageId":"140","endLine":11,"endColumn":15},{"ruleId":"133","severity":1,"message":"148","line":20,"column":6,"nodeType":"135","endLine":20,"endColumn":8,"suggestions":"149"},{"ruleId":"137","severity":1,"message":"150","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":11},{"ruleId":"137","severity":1,"message":"151","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":18},{"ruleId":"129","replacedBy":"152"},{"ruleId":"131","replacedBy":"153"},{"ruleId":"137","severity":1,"message":"154","line":4,"column":22,"nodeType":"139","messageId":"140","endLine":4,"endColumn":32},{"ruleId":"137","severity":1,"message":"155","line":5,"column":36,"nodeType":"139","messageId":"140","endLine":5,"endColumn":48},{"ruleId":"133","severity":1,"message":"143","line":18,"column":8,"nodeType":"135","endLine":18,"endColumn":10,"suggestions":"156"},{"ruleId":"137","severity":1,"message":"157","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":12},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["160"],"no-unused-vars","'device' is assigned a value but never used.","Identifier","unusedVar","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["161"],["162"],"'data' is assigned a value but never used.","'bigStar' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["163"],"'Col' is defined but never used.","'jwt_decode' is defined but never used.",["158"],["159"],"'createType' is defined but never used.","'fetchDevices' is defined but never used.",["164"],"'star' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"167","fix":"173"},"Update the dependencies array to be: [user]",{"range":"174","text":"175"},"Update the dependencies array to be: [device]",{"range":"176","text":"177"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"178","text":"179"},"Update the dependencies array to be: [id]",{"range":"180","text":"181"},{"range":"182","text":"177"},[662,664],"[user]",[875,877],"[device]",[1107,1164],"[device.page, device.selectedType, device.selectedBrand, device]",[486,488],"[id]",[750,752]]